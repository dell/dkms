# This configuration file modifies the behavior of DKMS (Dynamic Kernel Module
# Support) and is sourced in by DKMS every time it is run.
# Additionally to /etc/dkms/framework.conf, any file matching the glob
# /etc/dkms/framework.conf.d/*.conf will be loaded as well.

# Source Tree Location (default: /usr/src):
# source_tree="/usr/src"

# DKMS Tree Location (default: /var/lib/dkms):
# dkms_tree="/var/lib/dkms"

# Install Tree Location (default: @MODDIR@):
# install_tree="@MODDIR@"

# Temporary folder Location (default: /tmp):
# tmp_location="/tmp"

# Verbosity setting, will be active if set to a non-null value:
# verbose=""

# This creates symlinks from the install_tree into the dkms_tree instead of
# copying the modules. This preserves some space on the costs of being less
# safe. Symlinking will be active if set to a non-null value:
# symlink_modules=""

# Automatic installation and upgrade for all installed kernels if set to a
# non-null value:
# autoinstall_all_kernels=""

# Location of the sign-file kernel binary. $kernelver can be used in path to
# represent the target kernel version. (default: depends on distribution):
# sign_file="/path/to/sign-file"

# Location of the key and certificate files used for Secure boot. $kernelver
# can be used in path to represent the target kernel version.
#
# NOTE: If any of the files specified by `mok_signing_key` and `mok_certificate`
# are non-existent, dkms will re-create both files.
#
# mok_signing_key can also be a "pkcs11:..." string for PKCS#11 engine, as
# long as the sign_file program supports it.
# (default: /var/lib/dkms):
# mok_signing_key=/var/lib/dkms/mok.key
# mok_certificate=/var/lib/dkms/mok.pub

# Automatically modprobe the built modules upon successful installation:
# modprobe_on_install="true"

# Limit the number of jobs run in parallel (default is the number of CPUs)
# parallel_jobs=2

# Compression settings DKMS uses when compressing modules. The defaults are
# used, for reasonable compression times. One might instead wish to use maximum
# compression, at the expense of speed when compressing.
# compress_gzip_opts="-6"
# compress_xz_opts="--check=crc32 --lzma2=dict=1MiB -6"
# compress_zstd_opts="-q --rm -T0 -3"

# Command to run at the end of every DKMS transaction, for example after a new
# kernel has been installed on the system and all modules have been successfully
# built and installed.
# The command listed is executed if set to any non null value. $kernelver can be
# used in path to represent the target kernel version.
# post_transaction=""

# In common.postinst, if en error is encountered while building a module for
# a kernel, continue on to the next kernel if true, otherwise stop.
# continue_on_error="true"
